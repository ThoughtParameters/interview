{"version":3,"file":"component---src-pages-exam-js.js","mappings":"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","sources":["webpack://gatsby-starter-hello-world/./src/components/PrivateRoute.js","webpack://gatsby-starter-hello-world/./src/components/header.js","webpack://gatsby-starter-hello-world/./src/components/cookie-consent.js","webpack://gatsby-starter-hello-world/./src/components/layout.js","webpack://gatsby-starter-hello-world/./src/hooks/use-site-metadata.js","webpack://gatsby-starter-hello-world/./src/components/seo.js","webpack://gatsby-starter-hello-world/./src/pages/exam/[...].js"],"sourcesContent":["import React from 'react';\nimport { navigate } from 'gatsby';\nimport { useAuth } from '../context/AuthContext';\n\nconst PrivateRoute = ({ component: Component, location, ...rest }) => {\n  const { user, loading } = useAuth();\n\n  if (loading) {\n    return <p>Loading...</p>; // Or a spinner component\n  }\n\n  if (!user) {\n    // If weâ€™re not on the client side, donâ€™t redirect\n    if (typeof window !== 'undefined') {\n      navigate('/login');\n    }\n    return null;\n  }\n\n  return <Component {...rest} />;\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { useAuth } from '../context/AuthContext';\n\nconst Header = () => {\n  const { user, signOut } = useAuth();\n\n  return (\n    <header className=\"bg-gray-800 mb-6\">\n      <div className=\"container mx-auto px-6 py-4 flex justify-between items-center\">\n        <h1 className=\"text-2xl font-bold text-white\">\n          <Link to=\"/\" className=\"text-white no-underline\">\n            Thought Parameters\n          </Link>\n        </h1>\n        <nav>\n          <Link to=\"/blog\" className=\"text-white ml-5 no-underline\">\n            Blog\n          </Link>\n          <Link to=\"/learn\" className=\"text-white ml-5 no-underline\">\n            Learn\n          </Link>\n          <Link to=\"/exams\" className=\"text-white ml-5 no-underline\">\n            Exams\n          </Link>\n          {user ? (\n            <>\n              <Link to=\"/profile\" className=\"text-white ml-5 no-underline\">\n                Profile\n              </Link>\n              <button\n                onClick={signOut}\n                className=\"text-white ml-5 no-underline bg-transparent border-none cursor-pointer\"\n              >\n                Logout\n              </button>\n            </>\n          ) : (\n            <Link to=\"/login\" className=\"text-white ml-5 no-underline\">\n              Login\n            </Link>\n          )}\n        </nav>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport CookieConsent from 'react-cookie-consent';\n\nconst CookieConsentBanner = () => {\n  return (\n    <CookieConsent\n      location=\"bottom\"\n      buttonText=\"Accept\"\n      cookieName=\"gatsby-gdpr-google-analytics\"\n      style={{ background: '#2B373B' }}\n      buttonStyle={{ color: '#4e503b', fontSize: '13px' }}\n      expires={150}\n    >\n      This website uses cookies to enhance the user experience.\n    </CookieConsent>\n  );\n};\n\nexport default CookieConsentBanner;\n","import React from 'react';\nimport Header from './header';\nimport CookieConsentBanner from './cookie-consent';\nimport '../styles/global.css';\n\nconst Layout = ({ children }) => {\n  return (\n    <div className=\"bg-gray-900 text-white min-h-screen\">\n      <Header />\n      <main className=\"container mx-auto px-6 py-8\">{children}</main>\n      <CookieConsentBanner />\n    </div>\n  );\n};\n\nexport default Layout;\n","import { useStaticQuery, graphql } from 'gatsby';\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          twitterUsername\n          image\n          siteUrl\n        }\n      }\n    }\n  `);\n\n  return data.site.siteMetadata;\n};\n","import React from 'react';\nimport { useSiteMetadata } from '../hooks/use-site-metadata';\n\nexport const SEO = ({ title, description, pathname, children }) => {\n  const { title: defaultTitle, description: defaultDescription, image, siteUrl, twitterUsername } = useSiteMetadata();\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image}`,\n    url: `${siteUrl}${pathname || ``}`,\n    twitterUsername,\n  };\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:creator\" content={seo.twitterUsername} />\n      <link rel=\"icon\" href=\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='0.9em' font-size='90'>ðŸ‘¤</text></svg>\" />\n      {children}\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport Layout from '../../components/layout';\nimport { SEO } from '../../components/seo';\nimport PrivateRoute from '../../components/PrivateRoute';\nimport { Router } from '@reach/router';\n\nconst ExamContent = ({ exam_slug }) => {\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await fetch(\n          `https://interviewapi.thoughtparameters.com/questions/${exam_slug}`\n        );\n        if (!response.ok) {\n          throw new Error('Failed to fetch questions');\n        }\n        const data = await response.json();\n        setQuestions(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchQuestions();\n  }, [exam_slug]);\n\n  return (\n    <>\n      <SEO title={`Exam: ${exam_slug}`} />\n      <h1 className=\"text-3xl font-bold mb-4\">Certification Exam: {exam_slug}</h1>\n      {loading && <p>Loading questions...</p>}\n      {error && <p className=\"text-red-500\">{error}</p>}\n      {/* Add exam interface here */}\n    </>\n  );\n};\n\nconst ExamPage = () => {\n  return (\n    <Layout>\n      <Router basepath=\"/exam\">\n        <PrivateRoute component={ExamContent} path=\"/:exam_slug\" />\n      </Router>\n    </Layout>\n  );\n};\n\nexport default ExamPage;\n"],"names":["React","navigate","useAuth","PrivateRoute","component","Component","location","rest","user","loading","window","Link","Header","signOut","CookieConsent","CookieConsentBanner","background","color","fontSize","Layout","children","useStaticQuery","useSiteMetadata","data","site","siteMetadata","SEO","title","description","pathname","defaultTitle","defaultDescription","image","siteUrl","twitterUsername","seo","url","useState","useEffect","Router","ExamContent","exam_slug","questions","setQuestions","setLoading","error","setError","fetchQuestions","response","fetch","ok","Error","json","err","message","ExamPage"],"sourceRoot":""}